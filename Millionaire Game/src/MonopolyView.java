
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import javafx.scene.paint.Color;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lamsz
 */
public class MonopolyView extends javax.swing.JFrame {

    /**
     * Creates new form MonopolyView
     */
    private MonopolyControl control;

    public void setControl(MonopolyControl c) {
        this.control = c;
    }

    private ArrayList<SlotUiSet> slotUiSets = null;
    private ArrayList<PlayerUiSet> playerUiSets = null;

    public MonopolyView() {
        initComponents();
        findAllSlotUiSets();
        findAllPlayerUiSets();

        /*
        //testing for build all slots and allocal players
        //////////////////testing start//////////////////
        ArrayList<Player> testPlayers = new ArrayList<Player>();
        for (int i = 0; i < 4; i++) {
            testPlayers.add(new Player(i, i * 100, 0));
        }

        ArrayList<Slot> testSlots = new ArrayList<Slot>();
        testSlots.add(new Slot(0, "goSlot", -2000));
        for (int i = 1; i < 23; i++) {
            testSlots.add(new Slot(i, "Slot" + i, i * 10));
        }

        //initGame(testPlayers, testSlots);
        //////////////////testing end//////////////////
         */
 /*
        //testing for build all slots and allocal players with real slot data
        //////////////////testing start//////////////////
        ArrayList<Player> testPlayers = new ArrayList<Player>();
        for (int i = 0; i < 4; i++) {
            testPlayers.add(new Player(i, i * 100, 0));
        }

        ArrayList<Slot> testSlots = new ArrayList<Slot>();
        
        File file = new File("SlotData.csv");
        try {
            Scanner inputFile = new Scanner(file);

            while (inputFile.hasNext()) {
                String[] line = inputFile.nextLine().split(",");

                int id = Integer.parseInt(line[0]);
                String name = line[1];
                int price = Integer.parseInt(line[2]);

                Slot slot = new Slot(id, name, price);

                testSlots.add(slot);
                
                System.out.println(slot.getSlotID() + " " + slot.getSlotName() + " " + slot.getSlotPrice());
            }
            inputFile.close();   
        } catch (FileNotFoundException err) {
            System.out.println("File not found");
        }
        initGame(testPlayers, testSlots);
        //////////////////testing end//////////////////
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tradeDialog = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        tradePlayerSelecterComboBox0 = new javax.swing.JComboBox<>();
        tradeSlotSelecterComboBox0 = new javax.swing.JComboBox<>();
        tradePlayerSelecterComboBox1 = new javax.swing.JComboBox<>();
        tradeSlotSelecterComboBox1 = new javax.swing.JComboBox<>();
        tradeBidTextField0 = new javax.swing.JTextField();
        tradeBidTextField1 = new javax.swing.JTextField();
        tradeButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tradeBalanceLabel0 = new javax.swing.JLabel();
        tradeBalanceLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        gamePanel = new javax.swing.JPanel();
        mapPanel = new javax.swing.JPanel();
        slot0Panel = new javax.swing.JPanel();
        nameLabel0 = new javax.swing.JLabel();
        spaceLabel0 = new javax.swing.JLabel();
        priceLabel0 = new javax.swing.JLabel();
        ownerLabel0 = new javax.swing.JLabel();
        slot22Panel = new javax.swing.JPanel();
        nameLabel22 = new javax.swing.JLabel();
        spaceLabel22 = new javax.swing.JLabel();
        priceLabel22 = new javax.swing.JLabel();
        ownerLabel22 = new javax.swing.JLabel();
        slot1Panel = new javax.swing.JPanel();
        nameLabel1 = new javax.swing.JLabel();
        spaceLabel1 = new javax.swing.JLabel();
        priceLabel1 = new javax.swing.JLabel();
        ownerLabel1 = new javax.swing.JLabel();
        slot21Panel = new javax.swing.JPanel();
        nameLabel21 = new javax.swing.JLabel();
        spaceLabel21 = new javax.swing.JLabel();
        priceLabel21 = new javax.swing.JLabel();
        ownerLabel21 = new javax.swing.JLabel();
        slot20Panel = new javax.swing.JPanel();
        ownerLabel20 = new javax.swing.JLabel();
        priceLabel20 = new javax.swing.JLabel();
        spaceLabel20 = new javax.swing.JLabel();
        nameLabel20 = new javax.swing.JLabel();
        slot19Panel = new javax.swing.JPanel();
        nameLabel19 = new javax.swing.JLabel();
        spaceLabel19 = new javax.swing.JLabel();
        priceLabel19 = new javax.swing.JLabel();
        ownerLabel19 = new javax.swing.JLabel();
        slot10Panel = new javax.swing.JPanel();
        nameLabel10 = new javax.swing.JLabel();
        spaceLabel10 = new javax.swing.JLabel();
        priceLabel10 = new javax.swing.JLabel();
        ownerLabel10 = new javax.swing.JLabel();
        slot9Panel = new javax.swing.JPanel();
        spaceLabel9 = new javax.swing.JLabel();
        nameLabel9 = new javax.swing.JLabel();
        priceLabel9 = new javax.swing.JLabel();
        ownerLabel9 = new javax.swing.JLabel();
        slot8Panel = new javax.swing.JPanel();
        nameLabel8 = new javax.swing.JLabel();
        spaceLabel8 = new javax.swing.JLabel();
        priceLabel8 = new javax.swing.JLabel();
        ownerLabel8 = new javax.swing.JLabel();
        slot18Panel = new javax.swing.JPanel();
        nameLabel18 = new javax.swing.JLabel();
        spaceLabel18 = new javax.swing.JLabel();
        priceLabel18 = new javax.swing.JLabel();
        ownerLabel18 = new javax.swing.JLabel();
        slot17Panel = new javax.swing.JPanel();
        ownerLabel17 = new javax.swing.JLabel();
        priceLabel17 = new javax.swing.JLabel();
        spaceLabel17 = new javax.swing.JLabel();
        nameLabel17 = new javax.swing.JLabel();
        centerPanel = new javax.swing.JPanel();
        mainMessageLabel = new javax.swing.JLabel();
        mainButton = new javax.swing.JButton();
        secondButton = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        secondMessageLabel = new javax.swing.JLabel();
        slot13Panel = new javax.swing.JPanel();
        nameLabel13 = new javax.swing.JLabel();
        spaceLabel13 = new javax.swing.JLabel();
        priceLabel13 = new javax.swing.JLabel();
        ownerLabel13 = new javax.swing.JLabel();
        slot12Panel = new javax.swing.JPanel();
        ownerLabel12 = new javax.swing.JLabel();
        priceLabel12 = new javax.swing.JLabel();
        spaceLabel12 = new javax.swing.JLabel();
        nameLabel12 = new javax.swing.JLabel();
        slot11Panel = new javax.swing.JPanel();
        nameLabel11 = new javax.swing.JLabel();
        spaceLabel11 = new javax.swing.JLabel();
        priceLabel11 = new javax.swing.JLabel();
        ownerLabel11 = new javax.swing.JLabel();
        slot16Panel = new javax.swing.JPanel();
        ownerLabel16 = new javax.swing.JLabel();
        priceLabel16 = new javax.swing.JLabel();
        spaceLabel16 = new javax.swing.JLabel();
        nameLabel16 = new javax.swing.JLabel();
        slot2Panel = new javax.swing.JPanel();
        nameLabel2 = new javax.swing.JLabel();
        spaceLabel2 = new javax.swing.JLabel();
        priceLabel2 = new javax.swing.JLabel();
        ownerLabel2 = new javax.swing.JLabel();
        slot14Panel = new javax.swing.JPanel();
        nameLabel14 = new javax.swing.JLabel();
        spaceLabel14 = new javax.swing.JLabel();
        priceLabel14 = new javax.swing.JLabel();
        ownerLabel14 = new javax.swing.JLabel();
        slot15Panel = new javax.swing.JPanel();
        nameLabel15 = new javax.swing.JLabel();
        spaceLabel15 = new javax.swing.JLabel();
        priceLabel15 = new javax.swing.JLabel();
        ownerLabel15 = new javax.swing.JLabel();
        slot3Panel = new javax.swing.JPanel();
        nameLabel3 = new javax.swing.JLabel();
        spaceLabel3 = new javax.swing.JLabel();
        priceLabel3 = new javax.swing.JLabel();
        ownerLabel3 = new javax.swing.JLabel();
        slot4Panel = new javax.swing.JPanel();
        nameLabel4 = new javax.swing.JLabel();
        spaceLabel4 = new javax.swing.JLabel();
        priceLabel4 = new javax.swing.JLabel();
        ownerLabel4 = new javax.swing.JLabel();
        slot5Panel = new javax.swing.JPanel();
        nameLabel5 = new javax.swing.JLabel();
        spaceLabel5 = new javax.swing.JLabel();
        priceLabel5 = new javax.swing.JLabel();
        ownerLabel5 = new javax.swing.JLabel();
        slot6Panel = new javax.swing.JPanel();
        nameLabel6 = new javax.swing.JLabel();
        spaceLabel6 = new javax.swing.JLabel();
        priceLabel6 = new javax.swing.JLabel();
        ownerLabel6 = new javax.swing.JLabel();
        slot7Panel = new javax.swing.JPanel();
        nameLabel7 = new javax.swing.JLabel();
        spaceLabel7 = new javax.swing.JLabel();
        priceLabel7 = new javax.swing.JLabel();
        ownerLabel7 = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        playerPanel3 = new javax.swing.JPanel();
        playerNameLabel3 = new javax.swing.JLabel();
        playerPositionLabel3 = new javax.swing.JLabel();
        playerBalanceLabel3 = new javax.swing.JLabel();
        playerPanel2 = new javax.swing.JPanel();
        playerNameLabel2 = new javax.swing.JLabel();
        playerPositionLabel2 = new javax.swing.JLabel();
        playerBalanceLabel2 = new javax.swing.JLabel();
        playerPanel1 = new javax.swing.JPanel();
        playerNameLabel1 = new javax.swing.JLabel();
        playerPositionLabel1 = new javax.swing.JLabel();
        playerBalanceLabel1 = new javax.swing.JLabel();
        playerPanel0 = new javax.swing.JPanel();
        playerNameLabel0 = new javax.swing.JLabel();
        playerPositionLabel0 = new javax.swing.JLabel();
        playerBalanceLabel0 = new javax.swing.JLabel();
        testingPanel = new javax.swing.JPanel();
        slotCheatPanel = new javax.swing.JPanel();
        slotCheatSelecterComboBox = new javax.swing.JComboBox<>();
        slotCheatPriceTextField = new javax.swing.JTextField();
        slotCheatPlayerSelecterComboBox = new javax.swing.JComboBox<>();
        slotCheatOwnerLabel = new javax.swing.JLabel();
        slotCheatPriceLabel = new javax.swing.JLabel();
        slotCheatButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        playerCheatPanel = new javax.swing.JPanel();
        playerCheatPositionSelecterComboBox = new javax.swing.JComboBox<>();
        playerCheatBalanceTextField = new javax.swing.JTextField();
        playerCheatBankruptSelecterComboBox = new javax.swing.JComboBox<>();
        playerCheatBankruptLabel = new javax.swing.JLabel();
        playerCheatBalanceLabel = new javax.swing.JLabel();
        playerCheatButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        playerCheatPositionLabel = new javax.swing.JLabel();
        playerCheatSelecterComboBox = new javax.swing.JComboBox<>();
        playerCheatTurnHolderLabel = new javax.swing.JLabel();
        playerCheatTurnHolderComboBox = new javax.swing.JComboBox<>();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        menuItem1 = new javax.swing.JMenuItem();

        tradeDialog.setMaximumSize(new java.awt.Dimension(500, 300));
        tradeDialog.setMinimumSize(new java.awt.Dimension(500, 300));
        tradeDialog.setPreferredSize(new java.awt.Dimension(500, 300));
        tradeDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                tradeDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                tradeDialogWindowClosing(evt);
            }
        });
        java.awt.GridBagLayout tradeDialogLayout = new java.awt.GridBagLayout();
        tradeDialogLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        tradeDialogLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        tradeDialog.getContentPane().setLayout(tradeDialogLayout);

        jLabel5.setText("<- bid ->");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        tradeDialog.getContentPane().add(jLabel5, gridBagConstraints);

        tradePlayerSelecterComboBox0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tradePlayerSelecterComboBox0.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tradePlayerSelecterComboBox0ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        tradeDialog.getContentPane().add(tradePlayerSelecterComboBox0, gridBagConstraints);

        tradeSlotSelecterComboBox0.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        tradeDialog.getContentPane().add(tradeSlotSelecterComboBox0, gridBagConstraints);

        tradePlayerSelecterComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tradePlayerSelecterComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tradePlayerSelecterComboBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        tradeDialog.getContentPane().add(tradePlayerSelecterComboBox1, gridBagConstraints);

        tradeSlotSelecterComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        tradeDialog.getContentPane().add(tradeSlotSelecterComboBox1, gridBagConstraints);

        tradeBidTextField0.setText("jTextField1");
        tradeBidTextField0.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tradeBidTextField0InputMethodTextChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        tradeDialog.getContentPane().add(tradeBidTextField0, gridBagConstraints);

        tradeBidTextField1.setText("jTextField2");
        tradeBidTextField1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tradeBidTextField1InputMethodTextChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        tradeDialog.getContentPane().add(tradeBidTextField1, gridBagConstraints);

        tradeButton.setText("Trade!");
        tradeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        tradeDialog.getContentPane().add(tradeButton, gridBagConstraints);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Player");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        tradeDialog.getContentPane().add(jLabel6, gridBagConstraints);

        tradeBalanceLabel0.setText("jLabel7");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        tradeDialog.getContentPane().add(tradeBalanceLabel0, gridBagConstraints);

        tradeBalanceLabel1.setText("jLabel8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        tradeDialog.getContentPane().add(tradeBalanceLabel1, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("微軟正黑體", 1, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Trade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        tradeDialog.getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("<- slot ->");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        tradeDialog.getContentPane().add(jLabel8, gridBagConstraints);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        tradeDialog.getContentPane().add(jLabel9, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1041, 769));

        mapPanel.setBackground(new java.awt.Color(102, 255, 204));
        java.awt.GridBagLayout jPanel24Layout = new java.awt.GridBagLayout();
        jPanel24Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel24Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        mapPanel.setLayout(jPanel24Layout);

        slot0Panel.setMinimumSize(new java.awt.Dimension(200, 100));
        slot0Panel.setPreferredSize(new java.awt.Dimension(205, 100));
        slot0Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel0.setBackground(new java.awt.Color(255, 204, 204));
        nameLabel0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel0.setText("nameLabel0");
        nameLabel0.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot0Panel.add(nameLabel0, gridBagConstraints);

        spaceLabel0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel0.setText("spaceLabel0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.ipady = 9;
        slot0Panel.add(spaceLabel0, gridBagConstraints);

        priceLabel0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel0.setText("priceLabel0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.ipady = 9;
        slot0Panel.add(priceLabel0, gridBagConstraints);

        ownerLabel0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel0.setText("ownerLabel0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.ipady = 9;
        slot0Panel.add(ownerLabel0, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        mapPanel.add(slot0Panel, gridBagConstraints);

        slot22Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot22Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel22.setBackground(new java.awt.Color(255, 153, 0));
        nameLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel22.setText("nameLabel22");
        nameLabel22.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot22Panel.add(nameLabel22, gridBagConstraints);

        spaceLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel22.setText("jLabel86");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot22Panel.add(spaceLabel22, gridBagConstraints);

        priceLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel22.setText("jLabel87");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot22Panel.add(priceLabel22, gridBagConstraints);

        ownerLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel22.setText("jLabel88");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot22Panel.add(ownerLabel22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        mapPanel.add(slot22Panel, gridBagConstraints);

        slot1Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot1Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel1.setBackground(new java.awt.Color(255, 51, 51));
        nameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel1.setText("nameLabel1");
        nameLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot1Panel.add(nameLabel1, gridBagConstraints);

        spaceLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel1.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot1Panel.add(spaceLabel1, gridBagConstraints);

        priceLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel1.setText("jLabel3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot1Panel.add(priceLabel1, gridBagConstraints);

        ownerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel1.setText("jLabel4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot1Panel.add(ownerLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot1Panel, gridBagConstraints);

        slot21Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot21Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel21.setBackground(new java.awt.Color(255, 153, 0));
        nameLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel21.setText("nameLabel21");
        nameLabel21.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot21Panel.add(nameLabel21, gridBagConstraints);

        spaceLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel21.setText("jLabel82");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot21Panel.add(spaceLabel21, gridBagConstraints);

        priceLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel21.setText("jLabel83");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot21Panel.add(priceLabel21, gridBagConstraints);

        ownerLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel21.setText("jLabel84");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot21Panel.add(ownerLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        mapPanel.add(slot21Panel, gridBagConstraints);

        slot20Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot20Panel.setLayout(new java.awt.GridBagLayout());

        ownerLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel20.setText("jLabel80");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot20Panel.add(ownerLabel20, gridBagConstraints);

        priceLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel20.setText("jLabel79");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot20Panel.add(priceLabel20, gridBagConstraints);

        spaceLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel20.setText("jLabel78");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot20Panel.add(spaceLabel20, gridBagConstraints);

        nameLabel20.setBackground(new java.awt.Color(255, 153, 0));
        nameLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel20.setText("nameLabel20");
        nameLabel20.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot20Panel.add(nameLabel20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        mapPanel.add(slot20Panel, gridBagConstraints);

        slot19Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot19Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel19.setBackground(new java.awt.Color(255, 0, 255));
        nameLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel19.setText("nameLabel19");
        nameLabel19.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot19Panel.add(nameLabel19, gridBagConstraints);

        spaceLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel19.setText("jLabel74");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot19Panel.add(spaceLabel19, gridBagConstraints);

        priceLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel19.setText("jLabel75");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot19Panel.add(priceLabel19, gridBagConstraints);

        ownerLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel19.setText("jLabel76");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot19Panel.add(ownerLabel19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot19Panel, gridBagConstraints);

        slot10Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot10Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel10.setBackground(new java.awt.Color(0, 153, 255));
        nameLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel10.setText("nameLabel10");
        nameLabel10.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot10Panel.add(nameLabel10, gridBagConstraints);

        spaceLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel10.setText("jLabel38");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot10Panel.add(spaceLabel10, gridBagConstraints);

        priceLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel10.setText("jLabel39");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot10Panel.add(priceLabel10, gridBagConstraints);

        ownerLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel10.setText("jLabel40");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot10Panel.add(ownerLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 6;
        mapPanel.add(slot10Panel, gridBagConstraints);

        slot9Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot9Panel.setLayout(new java.awt.GridBagLayout());

        spaceLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel9.setText("jLabel34");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot9Panel.add(spaceLabel9, gridBagConstraints);

        nameLabel9.setBackground(new java.awt.Color(0, 204, 0));
        nameLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel9.setText("nameLabel9");
        nameLabel9.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot9Panel.add(nameLabel9, gridBagConstraints);

        priceLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel9.setText("jLabel35");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot9Panel.add(priceLabel9, gridBagConstraints);

        ownerLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel9.setText("jLabel36");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot9Panel.add(ownerLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 4;
        mapPanel.add(slot9Panel, gridBagConstraints);

        slot8Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot8Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel8.setBackground(new java.awt.Color(0, 204, 0));
        nameLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel8.setText("nameLabel8");
        nameLabel8.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot8Panel.add(nameLabel8, gridBagConstraints);

        spaceLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel8.setText("jLabel30");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot8Panel.add(spaceLabel8, gridBagConstraints);

        priceLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel8.setText("jLabel31");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot8Panel.add(priceLabel8, gridBagConstraints);

        ownerLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel8.setText("jLabel32");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot8Panel.add(ownerLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 2;
        mapPanel.add(slot8Panel, gridBagConstraints);

        slot18Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot18Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel18.setBackground(new java.awt.Color(255, 0, 255));
        nameLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel18.setText("nameLabel18");
        nameLabel18.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot18Panel.add(nameLabel18, gridBagConstraints);

        spaceLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel18.setText("jLabel70");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot18Panel.add(spaceLabel18, gridBagConstraints);

        priceLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel18.setText("jLabel71");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot18Panel.add(priceLabel18, gridBagConstraints);

        ownerLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel18.setText("jLabel72");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot18Panel.add(ownerLabel18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot18Panel, gridBagConstraints);

        slot17Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot17Panel.setLayout(new java.awt.GridBagLayout());

        ownerLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel17.setText("jLabel68");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot17Panel.add(ownerLabel17, gridBagConstraints);

        priceLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel17.setText("jLabel67");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot17Panel.add(priceLabel17, gridBagConstraints);

        spaceLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel17.setText("jLabel66");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot17Panel.add(spaceLabel17, gridBagConstraints);

        nameLabel17.setBackground(new java.awt.Color(255, 0, 255));
        nameLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel17.setText("nameLabel17");
        nameLabel17.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot17Panel.add(nameLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot17Panel, gridBagConstraints);

        centerPanel.setBackground(new java.awt.Color(102, 255, 204));
        centerPanel.setLayout(new java.awt.GridBagLayout());

        mainMessageLabel.setFont(new java.awt.Font("新細明體", 0, 36)); // NOI18N
        mainMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainMessageLabel.setText("Dice");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        centerPanel.add(mainMessageLabel, gridBagConstraints);

        mainButton.setBackground(new java.awt.Color(255, 153, 0));
        mainButton.setText("Roll Dice!!!");
        mainButton.setBorderPainted(false);
        mainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        centerPanel.add(mainButton, gridBagConstraints);

        secondButton.setBackground(new java.awt.Color(255, 255, 51));
        secondButton.setText("Let's Trade");
        secondButton.setBorderPainted(false);
        secondButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        centerPanel.add(secondButton, gridBagConstraints);

        turnLabel.setFont(new java.awt.Font("微軟正黑體", 0, 24)); // NOI18N
        turnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        turnLabel.setText("PlayerX's Turn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        centerPanel.add(turnLabel, gridBagConstraints);

        secondMessageLabel.setFont(new java.awt.Font("微軟正黑體", 1, 18)); // NOI18N
        secondMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondMessageLabel.setText("secondMessageLabel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        centerPanel.add(secondMessageLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        mapPanel.add(centerPanel, gridBagConstraints);

        slot13Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot13Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel13.setBackground(new java.awt.Color(204, 153, 0));
        nameLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel13.setText("nameLabel13");
        nameLabel13.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot13Panel.add(nameLabel13, gridBagConstraints);

        spaceLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel13.setText("jLabel50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot13Panel.add(spaceLabel13, gridBagConstraints);

        priceLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel13.setText("jLabel51");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot13Panel.add(priceLabel13, gridBagConstraints);

        ownerLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel13.setText("jLabel52");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot13Panel.add(ownerLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot13Panel, gridBagConstraints);

        slot12Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot12Panel.setLayout(new java.awt.GridBagLayout());

        ownerLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel12.setText("jLabel48");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot12Panel.add(ownerLabel12, gridBagConstraints);

        priceLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel12.setText("jLabel47");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot12Panel.add(priceLabel12, gridBagConstraints);

        spaceLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel12.setText("jLabel46");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot12Panel.add(spaceLabel12, gridBagConstraints);

        nameLabel12.setBackground(new java.awt.Color(204, 153, 0));
        nameLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel12.setText("nameLabel12");
        nameLabel12.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot12Panel.add(nameLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot12Panel, gridBagConstraints);

        slot11Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot11Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel11.setBackground(new java.awt.Color(0, 153, 255));
        nameLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel11.setText("nameLabel11");
        nameLabel11.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot11Panel.add(nameLabel11, gridBagConstraints);

        spaceLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel11.setText("jLabel42");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot11Panel.add(spaceLabel11, gridBagConstraints);

        priceLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel11.setText("jLabel43");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot11Panel.add(priceLabel11, gridBagConstraints);

        ownerLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel11.setText("jLabel44");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot11Panel.add(ownerLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot11Panel, gridBagConstraints);

        slot16Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot16Panel.setLayout(new java.awt.GridBagLayout());

        ownerLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel16.setText("jLabel64");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot16Panel.add(ownerLabel16, gridBagConstraints);

        priceLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel16.setText("jLabel63");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot16Panel.add(priceLabel16, gridBagConstraints);

        spaceLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel16.setText("jLabel62");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot16Panel.add(spaceLabel16, gridBagConstraints);

        nameLabel16.setBackground(new java.awt.Color(51, 255, 255));
        nameLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel16.setText("nameLabel16");
        nameLabel16.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot16Panel.add(nameLabel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot16Panel, gridBagConstraints);

        slot2Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot2Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel2.setBackground(new java.awt.Color(255, 51, 51));
        nameLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel2.setText("nameLabel2");
        nameLabel2.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot2Panel.add(nameLabel2, gridBagConstraints);

        spaceLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel2.setText("jLabel6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot2Panel.add(spaceLabel2, gridBagConstraints);

        priceLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel2.setText("jLabel7");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot2Panel.add(priceLabel2, gridBagConstraints);

        ownerLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel2.setText("jLabel8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot2Panel.add(ownerLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot2Panel, gridBagConstraints);

        slot14Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot14Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel14.setBackground(new java.awt.Color(51, 255, 255));
        nameLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel14.setText("nameLabel14");
        nameLabel14.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot14Panel.add(nameLabel14, gridBagConstraints);

        spaceLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel14.setText("jLabel54");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot14Panel.add(spaceLabel14, gridBagConstraints);

        priceLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel14.setText("jLabel55");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot14Panel.add(priceLabel14, gridBagConstraints);

        ownerLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel14.setText("jLabel56");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot14Panel.add(ownerLabel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot14Panel, gridBagConstraints);

        slot15Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot15Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel15.setBackground(new java.awt.Color(51, 255, 255));
        nameLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel15.setText("nameLabel15");
        nameLabel15.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot15Panel.add(nameLabel15, gridBagConstraints);

        spaceLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel15.setText("jLabel58");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot15Panel.add(spaceLabel15, gridBagConstraints);

        priceLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel15.setText("jLabel59");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot15Panel.add(priceLabel15, gridBagConstraints);

        ownerLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel15.setText("jLabel60");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot15Panel.add(ownerLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 8;
        mapPanel.add(slot15Panel, gridBagConstraints);

        slot3Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot3Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel3.setBackground(new java.awt.Color(255, 51, 51));
        nameLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel3.setText("nameLabel3");
        nameLabel3.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot3Panel.add(nameLabel3, gridBagConstraints);

        spaceLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel3.setText("jLabel10");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot3Panel.add(spaceLabel3, gridBagConstraints);

        priceLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel3.setText("jLabel11");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot3Panel.add(priceLabel3, gridBagConstraints);

        ownerLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel3.setText("jLabel12");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot3Panel.add(ownerLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot3Panel, gridBagConstraints);

        slot4Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot4Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel4.setBackground(new java.awt.Color(255, 255, 51));
        nameLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel4.setText("nameLabel4");
        nameLabel4.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot4Panel.add(nameLabel4, gridBagConstraints);

        spaceLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel4.setText("jLabel14");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot4Panel.add(spaceLabel4, gridBagConstraints);

        priceLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel4.setText("jLabel15");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot4Panel.add(priceLabel4, gridBagConstraints);

        ownerLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel4.setText("jLabel16");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot4Panel.add(ownerLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot4Panel, gridBagConstraints);

        slot5Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot5Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel5.setBackground(new java.awt.Color(255, 255, 51));
        nameLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel5.setText("nameLabel5");
        nameLabel5.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot5Panel.add(nameLabel5, gridBagConstraints);

        spaceLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel5.setText("jLabel18");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot5Panel.add(spaceLabel5, gridBagConstraints);

        priceLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel5.setText("jLabel19");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot5Panel.add(priceLabel5, gridBagConstraints);

        ownerLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel5.setText("jLabel20");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot5Panel.add(ownerLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot5Panel, gridBagConstraints);

        slot6Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot6Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel6.setBackground(new java.awt.Color(255, 255, 51));
        nameLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel6.setText("nameLabel6");
        nameLabel6.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot6Panel.add(nameLabel6, gridBagConstraints);

        spaceLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel6.setText("jLabel22");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot6Panel.add(spaceLabel6, gridBagConstraints);

        priceLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel6.setText("jLabel23");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot6Panel.add(priceLabel6, gridBagConstraints);

        ownerLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel6.setText("jLabel24");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot6Panel.add(ownerLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot6Panel, gridBagConstraints);

        slot7Panel.setPreferredSize(new java.awt.Dimension(100, 100));
        slot7Panel.setLayout(new java.awt.GridBagLayout());

        nameLabel7.setBackground(new java.awt.Color(0, 204, 0));
        nameLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel7.setText("nameLabel7");
        nameLabel7.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot7Panel.add(nameLabel7, gridBagConstraints);

        spaceLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spaceLabel7.setText("jLabel26");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot7Panel.add(spaceLabel7, gridBagConstraints);

        priceLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel7.setText("jLabel27");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot7Panel.add(priceLabel7, gridBagConstraints);

        ownerLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ownerLabel7.setText("jLabel28");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 9;
        slot7Panel.add(ownerLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 0;
        mapPanel.add(slot7Panel, gridBagConstraints);

        statusPanel.setBackground(new java.awt.Color(153, 153, 255));
        statusPanel.setMaximumSize(new java.awt.Dimension(1012, 140));
        statusPanel.setMinimumSize(new java.awt.Dimension(1012, 140));
        java.awt.GridBagLayout statusPanelLayout = new java.awt.GridBagLayout();
        statusPanelLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        statusPanelLayout.rowHeights = new int[] {0};
        statusPanel.setLayout(statusPanelLayout);

        playerPanel3.setMaximumSize(null);

        playerNameLabel3.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerNameLabel3.setText("playerNameLabel3");

        playerPositionLabel3.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerPositionLabel3.setText("playerPositionLabel3");

        playerBalanceLabel3.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerBalanceLabel3.setText("playerBalanceLabel3");

        javax.swing.GroupLayout playerPanel3Layout = new javax.swing.GroupLayout(playerPanel3);
        playerPanel3.setLayout(playerPanel3Layout);
        playerPanel3Layout.setHorizontalGroup(
            playerPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerNameLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerPositionLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(playerBalanceLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerPanel3Layout.setVerticalGroup(
            playerPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerNameLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerPositionLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerBalanceLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        statusPanel.add(playerPanel3, gridBagConstraints);

        playerPanel2.setMaximumSize(null);

        playerNameLabel2.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerNameLabel2.setText("playerNameLabel2");

        playerPositionLabel2.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerPositionLabel2.setText("playerPositionLabel2");

        playerBalanceLabel2.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerBalanceLabel2.setText("playerBalanceLabel2");

        javax.swing.GroupLayout playerPanel2Layout = new javax.swing.GroupLayout(playerPanel2);
        playerPanel2.setLayout(playerPanel2Layout);
        playerPanel2Layout.setHorizontalGroup(
            playerPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerPositionLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(playerBalanceLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerPanel2Layout.setVerticalGroup(
            playerPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerNameLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerPositionLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerBalanceLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        statusPanel.add(playerPanel2, gridBagConstraints);

        playerPanel1.setMaximumSize(null);

        playerNameLabel1.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerNameLabel1.setText("playerNameLabel1");

        playerPositionLabel1.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerPositionLabel1.setText("playerPositionLabel1");

        playerBalanceLabel1.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerBalanceLabel1.setText("playerBalanceLabel1");

        javax.swing.GroupLayout playerPanel1Layout = new javax.swing.GroupLayout(playerPanel1);
        playerPanel1.setLayout(playerPanel1Layout);
        playerPanel1Layout.setHorizontalGroup(
            playerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerPositionLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(playerBalanceLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerPanel1Layout.setVerticalGroup(
            playerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerNameLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerPositionLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerBalanceLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        statusPanel.add(playerPanel1, gridBagConstraints);

        playerPanel0.setMaximumSize(null);

        playerNameLabel0.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerNameLabel0.setText("playerNameLabel0");

        playerPositionLabel0.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerPositionLabel0.setText("playerPositionLabel0");

        playerBalanceLabel0.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        playerBalanceLabel0.setText("playerBalanceLabel0");

        javax.swing.GroupLayout playerPanel0Layout = new javax.swing.GroupLayout(playerPanel0);
        playerPanel0.setLayout(playerPanel0Layout);
        playerPanel0Layout.setHorizontalGroup(
            playerPanel0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel0Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanel0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerNameLabel0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerPositionLabel0, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(playerBalanceLabel0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerPanel0Layout.setVerticalGroup(
            playerPanel0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanel0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerNameLabel0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerPositionLabel0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerBalanceLabel0)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        statusPanel.add(playerPanel0, gridBagConstraints);

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1036, Short.MAX_VALUE)
            .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
        );

        tabbedPane.addTab("game board", gamePanel);

        slotCheatPanel.setBackground(new java.awt.Color(204, 255, 204));
        java.awt.GridBagLayout slotCheatPanelLayout = new java.awt.GridBagLayout();
        slotCheatPanelLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        slotCheatPanelLayout.rowHeights = new int[] {0};
        slotCheatPanel.setLayout(slotCheatPanelLayout);

        slotCheatSelecterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        slotCheatSelecterComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                slotCheatSelecterComboBoxItemStateChanged(evt);
            }
        });
        slotCheatSelecterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slotCheatSelecterComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatSelecterComboBox, gridBagConstraints);

        slotCheatPriceTextField.setText("Price");
        slotCheatPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slotCheatPriceTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatPriceTextField, gridBagConstraints);

        slotCheatPlayerSelecterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatPlayerSelecterComboBox, gridBagConstraints);

        slotCheatOwnerLabel.setText("Owner:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatOwnerLabel, gridBagConstraints);

        slotCheatPriceLabel.setText("Price:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatPriceLabel, gridBagConstraints);

        slotCheatButton.setText("Set");
        slotCheatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slotCheatButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(slotCheatButton, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("微軟正黑體", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Slot Cheater:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setText("    ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        slotCheatPanel.add(jLabel2, gridBagConstraints);

        playerCheatPanel.setBackground(new java.awt.Color(204, 255, 204));
        java.awt.GridBagLayout playerCheatPanelLayout = new java.awt.GridBagLayout();
        playerCheatPanelLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        playerCheatPanelLayout.rowHeights = new int[] {0};
        playerCheatPanel.setLayout(playerCheatPanelLayout);

        playerCheatPositionSelecterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        playerCheatPositionSelecterComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                playerCheatPositionSelecterComboBoxItemStateChanged(evt);
            }
        });
        playerCheatPositionSelecterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerCheatPositionSelecterComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatPositionSelecterComboBox, gridBagConstraints);

        playerCheatBalanceTextField.setText("Balance");
        playerCheatBalanceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerCheatBalanceTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatBalanceTextField, gridBagConstraints);

        playerCheatBankruptSelecterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatBankruptSelecterComboBox, gridBagConstraints);

        playerCheatBankruptLabel.setText("Bankrup:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatBankruptLabel, gridBagConstraints);

        playerCheatBalanceLabel.setText("Balance:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatBalanceLabel, gridBagConstraints);

        playerCheatButton.setText("Set");
        playerCheatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerCheatButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 22;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatButton, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("微軟正黑體", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Player Cheater:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(jLabel3, gridBagConstraints);

        jLabel4.setText("    ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(jLabel4, gridBagConstraints);

        playerCheatPositionLabel.setText("Position:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatPositionLabel, gridBagConstraints);

        playerCheatSelecterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        playerCheatSelecterComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                playerCheatSelecterComboBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatSelecterComboBox, gridBagConstraints);

        playerCheatTurnHolderLabel.setText("Turn Holder:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatTurnHolderLabel, gridBagConstraints);

        playerCheatTurnHolderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 0;
        playerCheatPanel.add(playerCheatTurnHolderComboBox, gridBagConstraints);

        javax.swing.GroupLayout testingPanelLayout = new javax.swing.GroupLayout(testingPanel);
        testingPanel.setLayout(testingPanelLayout);
        testingPanelLayout.setHorizontalGroup(
            testingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slotCheatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerCheatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE))
                .addContainerGap())
        );
        testingPanelLayout.setVerticalGroup(
            testingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerCheatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(slotCheatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(625, Short.MAX_VALUE))
        );

        tabbedPane.addTab("testing panel", testingPanel);

        menu.setText("Setting");

        menuItem1.setText("reset game");
        menuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem1ActionPerformed(evt);
            }
        });
        menu.add(menuItem1);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem1ActionPerformed
        control.resetGameRequest();
    }//GEN-LAST:event_menuItem1ActionPerformed

    private void mainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainButtonActionPerformed
        control.main();
    }//GEN-LAST:event_mainButtonActionPerformed

    private void secondButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondButtonActionPerformed
        control.second();
    }//GEN-LAST:event_secondButtonActionPerformed

    private void slotCheatSelecterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slotCheatSelecterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slotCheatSelecterComboBoxActionPerformed

    private void slotCheatSelecterComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_slotCheatSelecterComboBoxItemStateChanged
        if (slotCheatSelecterComboBox.getSelectedItem() != null) {
            Slot fakeSlot = control.requestSlot(Integer.parseInt(slotCheatSelecterComboBox.getSelectedItem().toString().split(" ")[0]));
            slotCheatPriceTextField.setText(Integer.toString(fakeSlot.getSlotPrice()));
            if (fakeSlot.getOwner() == null) {
                slotCheatPlayerSelecterComboBox.setSelectedItem("no owner");
            } else {
                slotCheatPlayerSelecterComboBox.setSelectedItem("Player " + fakeSlot.getOwner().getPlayerID());
            }
            if (fakeSlot.getSlotPrice() <= 0) {
                slotCheatPriceLabel.setText("Bonus:");
                slotCheatPriceTextField.setText(Integer.toString(Math.abs(fakeSlot.getSlotPrice())));
                slotCheatOwnerLabel.setVisible(false);
                slotCheatPlayerSelecterComboBox.setVisible(false);
            } else {
                slotCheatPriceLabel.setText("Price:");
                slotCheatOwnerLabel.setVisible(true);
                slotCheatPlayerSelecterComboBox.setVisible(true);
            }
        }

    }//GEN-LAST:event_slotCheatSelecterComboBoxItemStateChanged

    private void slotCheatPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slotCheatPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slotCheatPriceTextFieldActionPerformed

    private void slotCheatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slotCheatButtonActionPerformed
        int slotID = Integer.parseInt(slotCheatSelecterComboBox.getSelectedItem().toString().split(" ")[0]);

        int slotPrice;
        if (slotCheatPriceLabel.getText().compareTo("Bonus:") == 0) {
            slotPrice = 0 - Integer.parseInt(slotCheatPriceTextField.getText());
        } else {
            slotPrice = Integer.parseInt(slotCheatPriceTextField.getText());
        }

        String tmp = (String) slotCheatPlayerSelecterComboBox.getSelectedItem();
        int slotOwnerID = -1;
        if (tmp.compareTo("no owner") != 0) {
            slotOwnerID = Integer.parseInt(tmp.split(" ")[1]);
        }
        control.slotCheat(slotID, slotPrice, slotOwnerID);
    }//GEN-LAST:event_slotCheatButtonActionPerformed

    private void playerCheatPositionSelecterComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_playerCheatPositionSelecterComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_playerCheatPositionSelecterComboBoxItemStateChanged

    private void playerCheatPositionSelecterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerCheatPositionSelecterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerCheatPositionSelecterComboBoxActionPerformed

    private void playerCheatBalanceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerCheatBalanceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerCheatBalanceTextFieldActionPerformed

    private void playerCheatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerCheatButtonActionPerformed
        int playerID = Integer.parseInt(playerCheatSelecterComboBox.getSelectedItem().toString().split(" ")[1]);

        int balance = Integer.parseInt(playerCheatBalanceTextField.getText());

        boolean isBankrupt;
        String tmp = (String) playerCheatBankruptSelecterComboBox.getSelectedItem();
        if (tmp.compareTo("YES") == 0) {
            isBankrupt = true;
        } else {
            isBankrupt = false;
        }

        int position = Integer.parseInt(playerCheatPositionSelecterComboBox.getSelectedItem().toString().split(" ")[0]);

        boolean isTurn;
        tmp = (String) playerCheatTurnHolderComboBox.getSelectedItem();
        if (tmp.compareTo("YES") == 0) {
            isTurn = true;
        } else {
            isTurn = false;
        }

        control.playerCheat(playerID, balance, isBankrupt, position, isTurn);
    }//GEN-LAST:event_playerCheatButtonActionPerformed

    private void playerCheatSelecterComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_playerCheatSelecterComboBoxItemStateChanged
        if (playerCheatSelecterComboBox.getSelectedItem() != null) {
            Player fakePlayer = control.requestPlayer(Integer.parseInt(playerCheatSelecterComboBox.getSelectedItem().toString().split(" ")[1]));
            playerCheatBalanceTextField.setText(Integer.toString(fakePlayer.getBalance()));
            if (fakePlayer.isIsBankrupt()) {
                playerCheatBankruptSelecterComboBox.setSelectedItem("YES");
            } else {
                playerCheatBankruptSelecterComboBox.setSelectedItem("NO");
            }
            if (playerCheatPositionSelecterComboBox.getSelectedItem() != null) {
                playerCheatPositionSelecterComboBox.setSelectedIndex(fakePlayer.getPosition());
            }

            if (fakePlayer.getPlayerID() == control.requestTurnHolderID()) {
                playerCheatTurnHolderComboBox.setSelectedItem("YES");
            } else {
                playerCheatTurnHolderComboBox.setSelectedItem("NO");
            }
        }


    }//GEN-LAST:event_playerCheatSelecterComboBoxItemStateChanged

    private void tradeDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_tradeDialogWindowClosed
        // TODO add your handling code here:
        this.closeTradeDialog();
    }//GEN-LAST:event_tradeDialogWindowClosed

    private void tradeDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_tradeDialogWindowClosing
        // TODO add your handling code here:
        this.closeTradeDialog();
    }//GEN-LAST:event_tradeDialogWindowClosing

    private void tradeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeButtonActionPerformed

    private void tradePlayerSelecterComboBox0ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tradePlayerSelecterComboBox0ItemStateChanged
        // TODO add your handling code here:
        if (tradePlayerSelecterComboBox0.getSelectedItem() != null) {
            Player p = control.requestPlayer(Integer.parseInt(tradePlayerSelecterComboBox0.getSelectedItem().toString().split(" ")[1]));
            tradeSlotSelecterComboBox0.removeAllItems();
            tradeSlotSelecterComboBox0.addItem("                    N/A                    ");
            for (Slot s : p.getOwnedSlots()) {
                tradeSlotSelecterComboBox0.addItem(s.getSlotID() + " " + s.getSlotName() + ": $" + s.getSlotPrice());
            }
            tradeBalanceLabel0.setText("$" + p.getBalance());
            tradeBidTextField0.setText("                    ");
        }
    }//GEN-LAST:event_tradePlayerSelecterComboBox0ItemStateChanged

    private void tradePlayerSelecterComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tradePlayerSelecterComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (tradePlayerSelecterComboBox1.getSelectedItem() != null) {
            Player p = control.requestPlayer(Integer.parseInt(tradePlayerSelecterComboBox1.getSelectedItem().toString().split(" ")[1]));
            tradeSlotSelecterComboBox1.removeAllItems();
            tradeSlotSelecterComboBox1.addItem("                    N/A                    ");
            for (Slot s : p.getOwnedSlots()) {
                tradeSlotSelecterComboBox1.addItem(s.getSlotID() + " " + s.getSlotName() + ": $" + s.getSlotPrice());
            }
            tradeBalanceLabel1.setText("$" + p.getBalance());
            tradeBidTextField1.setText("                    ");
        }
    }//GEN-LAST:event_tradePlayerSelecterComboBox1ItemStateChanged

    private void tradeBidTextField0InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tradeBidTextField0InputMethodTextChanged
        // TODO add your handling code here:
        if(Integer.parseInt(tradeBidTextField0.getText()) < 0) {
            tradeBidTextField0.setText("0");
        }
        System.out.println(tradeBalanceLabel0.getText().split("$")[0]);
        if(Integer.parseInt(tradeBidTextField0.getText()) > Integer.parseInt(tradeBalanceLabel0.getText().split("$")[0])) {
            tradeBidTextField0.setText(tradeBalanceLabel0.getText().split("$")[0]);
        }
    }//GEN-LAST:event_tradeBidTextField0InputMethodTextChanged

    private void tradeBidTextField1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tradeBidTextField1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeBidTextField1InputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonopolyView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonopolyView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonopolyView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonopolyView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonopolyView().setVisible(true);
            }
        });
    }

    public void initCheatPanel(ArrayList<Player> players, ArrayList<Slot> slots, Player turnHolder, int turn) {
        playerCheatSelecterComboBox.removeAllItems();
        playerCheatPositionSelecterComboBox.removeAllItems();
        playerCheatBankruptSelecterComboBox.removeAllItems();
        playerCheatTurnHolderComboBox.removeAllItems();

        playerCheatBankruptSelecterComboBox.addItem("YES");
        playerCheatBankruptSelecterComboBox.addItem("NO");
        playerCheatTurnHolderComboBox.addItem("YES");
        playerCheatTurnHolderComboBox.addItem("NO");

        slotCheatSelecterComboBox.removeAllItems();
        slotCheatPlayerSelecterComboBox.removeAllItems();

        slotCheatPlayerSelecterComboBox.addItem("no owner");

        //player
        ArrayList<String> playerOptions = new ArrayList<String>();
        for (Player p : players) {
            String option = "Player " + p.getPlayerID();
            playerCheatSelecterComboBox.addItem(option);
            slotCheatPlayerSelecterComboBox.addItem(option);
        }

        //slot
        ArrayList<String> slotOptions = new ArrayList<String>();
        for (Slot s : slots) {
            String option = s.getSlotID() + " " + s.getSlotName();
            playerCheatPositionSelecterComboBox.addItem(option);
            slotCheatSelecterComboBox.addItem(option);
        }

    }

    private void findAllPlayerUiSets() {

        ArrayList<JPanel> playerPanel = new ArrayList<>();
        ArrayList<JLabel> playerNameLabel = new ArrayList<>();
        ArrayList<JLabel> playerPosistionLabel = new ArrayList<>();
        ArrayList<JLabel> playerBalanceLabel = new ArrayList<>();

        playerPanel.add(playerPanel0);
        playerPanel.add(playerPanel1);
        playerPanel.add(playerPanel2);
        playerPanel.add(playerPanel3);
        playerNameLabel.add(playerNameLabel0);
        playerNameLabel.add(playerNameLabel1);
        playerNameLabel.add(playerNameLabel2);
        playerNameLabel.add(playerNameLabel3);
        playerPosistionLabel.add(playerPositionLabel0);
        playerPosistionLabel.add(playerPositionLabel1);
        playerPosistionLabel.add(playerPositionLabel2);
        playerPosistionLabel.add(playerPositionLabel3);
        playerBalanceLabel.add(playerBalanceLabel0);
        playerBalanceLabel.add(playerBalanceLabel1);
        playerBalanceLabel.add(playerBalanceLabel2);
        playerBalanceLabel.add(playerBalanceLabel3);

        this.playerUiSets = new ArrayList<PlayerUiSet>();
        for (int i = 0; i < 4; i++) {
            playerUiSets.add(new PlayerUiSet(i, playerPanel.get(i), playerNameLabel.get(i), playerPosistionLabel.get(i), playerBalanceLabel.get(i)));
        }
    }

    private void findAllSlotUiSets() {
        //store every ui element into array
        ArrayList<JPanel> slotPanel = new ArrayList<>();
        ArrayList<JLabel> nameLabel = new ArrayList<>();
        ArrayList<JLabel> spaceLabel = new ArrayList<>();
        ArrayList<JLabel> priceLabel = new ArrayList<>();
        ArrayList<JLabel> ownerLabel = new ArrayList<>();
        slotPanel.add(slot0Panel);
        slotPanel.add(slot1Panel);
        slotPanel.add(slot2Panel);
        slotPanel.add(slot3Panel);
        slotPanel.add(slot4Panel);
        slotPanel.add(slot5Panel);
        slotPanel.add(slot6Panel);
        slotPanel.add(slot7Panel);
        slotPanel.add(slot8Panel);
        slotPanel.add(slot9Panel);
        slotPanel.add(slot10Panel);
        slotPanel.add(slot11Panel);
        slotPanel.add(slot12Panel);
        slotPanel.add(slot13Panel);
        slotPanel.add(slot14Panel);
        slotPanel.add(slot15Panel);
        slotPanel.add(slot16Panel);
        slotPanel.add(slot17Panel);
        slotPanel.add(slot18Panel);
        slotPanel.add(slot19Panel);
        slotPanel.add(slot20Panel);
        slotPanel.add(slot21Panel);
        slotPanel.add(slot22Panel);
        nameLabel.add(nameLabel0);
        nameLabel.add(nameLabel1);
        nameLabel.add(nameLabel2);
        nameLabel.add(nameLabel3);
        nameLabel.add(nameLabel4);
        nameLabel.add(nameLabel5);
        nameLabel.add(nameLabel6);
        nameLabel.add(nameLabel7);
        nameLabel.add(nameLabel8);
        nameLabel.add(nameLabel9);
        nameLabel.add(nameLabel10);
        nameLabel.add(nameLabel11);
        nameLabel.add(nameLabel12);
        nameLabel.add(nameLabel13);
        nameLabel.add(nameLabel14);
        nameLabel.add(nameLabel15);
        nameLabel.add(nameLabel16);
        nameLabel.add(nameLabel17);
        nameLabel.add(nameLabel18);
        nameLabel.add(nameLabel19);
        nameLabel.add(nameLabel20);
        nameLabel.add(nameLabel21);
        nameLabel.add(nameLabel22);
        spaceLabel.add(spaceLabel0);
        spaceLabel.add(spaceLabel1);
        spaceLabel.add(spaceLabel2);
        spaceLabel.add(spaceLabel3);
        spaceLabel.add(spaceLabel4);
        spaceLabel.add(spaceLabel5);
        spaceLabel.add(spaceLabel6);
        spaceLabel.add(spaceLabel7);
        spaceLabel.add(spaceLabel8);
        spaceLabel.add(spaceLabel9);
        spaceLabel.add(spaceLabel10);
        spaceLabel.add(spaceLabel11);
        spaceLabel.add(spaceLabel12);
        spaceLabel.add(spaceLabel13);
        spaceLabel.add(spaceLabel14);
        spaceLabel.add(spaceLabel15);
        spaceLabel.add(spaceLabel16);
        spaceLabel.add(spaceLabel17);
        spaceLabel.add(spaceLabel18);
        spaceLabel.add(spaceLabel19);
        spaceLabel.add(spaceLabel20);
        spaceLabel.add(spaceLabel21);
        spaceLabel.add(spaceLabel22);
        priceLabel.add(priceLabel0);
        priceLabel.add(priceLabel1);
        priceLabel.add(priceLabel2);
        priceLabel.add(priceLabel3);
        priceLabel.add(priceLabel4);
        priceLabel.add(priceLabel5);
        priceLabel.add(priceLabel6);
        priceLabel.add(priceLabel7);
        priceLabel.add(priceLabel8);
        priceLabel.add(priceLabel9);
        priceLabel.add(priceLabel10);
        priceLabel.add(priceLabel11);
        priceLabel.add(priceLabel12);
        priceLabel.add(priceLabel13);
        priceLabel.add(priceLabel14);
        priceLabel.add(priceLabel15);
        priceLabel.add(priceLabel16);
        priceLabel.add(priceLabel17);
        priceLabel.add(priceLabel18);
        priceLabel.add(priceLabel19);
        priceLabel.add(priceLabel20);
        priceLabel.add(priceLabel21);
        priceLabel.add(priceLabel22);
        ownerLabel.add(ownerLabel0);
        ownerLabel.add(ownerLabel1);
        ownerLabel.add(ownerLabel2);
        ownerLabel.add(ownerLabel3);
        ownerLabel.add(ownerLabel4);
        ownerLabel.add(ownerLabel5);
        ownerLabel.add(ownerLabel6);
        ownerLabel.add(ownerLabel7);
        ownerLabel.add(ownerLabel8);
        ownerLabel.add(ownerLabel9);
        ownerLabel.add(ownerLabel10);
        ownerLabel.add(ownerLabel11);
        ownerLabel.add(ownerLabel12);
        ownerLabel.add(ownerLabel13);
        ownerLabel.add(ownerLabel14);
        ownerLabel.add(ownerLabel15);
        ownerLabel.add(ownerLabel16);
        ownerLabel.add(ownerLabel17);
        ownerLabel.add(ownerLabel18);
        ownerLabel.add(ownerLabel19);
        ownerLabel.add(ownerLabel20);
        ownerLabel.add(ownerLabel21);
        ownerLabel.add(ownerLabel22);
        //add to slotUiSet
        this.slotUiSets = new ArrayList<SlotUiSet>();
        for (int i = 0; i < 23; i++) {
            slotUiSets.add(new SlotUiSet(i, slotPanel.get(i), nameLabel.get(i), spaceLabel.get(i), priceLabel.get(i), ownerLabel.get(i)));
        }

    }

    public void initGame(ArrayList<Player> players, ArrayList<Slot> slots, Player turnHolder) {
        //slot
        for (Slot s : slots) {
            SlotUiSet sus = slotUiSets.get(s.getSlotID());
            if (s.getSlotPrice() <= 0) {//go slot
                sus.getPanel().setBackground(java.awt.Color.PINK);
                //sus.getNameLabel().setText(Integer.toString(s.getSlotID()) + " " + s.getSlotName());
                sus.getNameLabel().setText(s.getSlotName());
                sus.getSpaceLabel().setText(" ");
                sus.getPriceLabel().setText("+$" + Integer.toString(Math.abs(s.getSlotPrice())));
                sus.getOwnerLabel().setText("get bonus");
            } else {//normal slot
                //sus.getNameLabel().setText(Integer.toString(s.getSlotID()) + " " + s.getSlotName());
                sus.getNameLabel().setText(s.getSlotName());
                sus.getSpaceLabel().setText(" ");
                sus.getPriceLabel().setText("$" + Integer.toString(s.getSlotPrice()));
                sus.getOwnerLabel().setText("available");
            }
        }

        //player
        //allocate player
        for (Player p : players) {
            JLabel spaceLabel = slotUiSets.get(p.getPosition()).getSpaceLabel();
            String tmp = spaceLabel.getText().trim();
            spaceLabel.setText((tmp + " " + Integer.toString(p.getPlayerID())).trim());
        }
        //player status
        for (Player p : players) {
            PlayerUiSet pus = playerUiSets.get(p.getPlayerID());
            JLabel playerNameLabel = pus.getPlayerNameLabel();
            JLabel playerPositionLabel = pus.getPlayerPosistionLabel();
            JLabel playerBalanceLabel = pus.getPlayerBalanceLabel();

            playerNameLabel.setText("Player: " + Integer.toString(p.getPlayerID()));
            playerPositionLabel.setText("Position: " + slots.get(p.getPosition()).getSlotName());
            playerBalanceLabel.setText("Balance: " + Integer.toString(p.getBalance()));
        }
        //message display
        this.displayMainMessage("Roll dice to move!");
        this.displayTurnMessage("Player" + turnHolder.getPlayerID() + "'s Turn");
        this.displaySecondMessage(" ");
        this.displayMainButton("Roll Dice!!!");
        this.displaySecondButton("Let's Trade");
    }

    public void refreshView(ArrayList<Player> players, ArrayList<Slot> slots) {
        //clear all slots
        for (SlotUiSet sus : slotUiSets) {
            sus.getSpaceLabel().setText(" ");
            sus.getPriceLabel().setText(" ");
            sus.getOwnerLabel().setText("available");

        }

        for (Slot s : slots) {
            SlotUiSet sus = slotUiSets.get(s.getSlotID());

            if (s.getSlotPrice() <= 0) {//go slot
                sus.getPanel().setBackground(java.awt.Color.PINK);

                sus.getPriceLabel().setText("+$" + Integer.toString(Math.abs(s.getSlotPrice())));
                sus.getOwnerLabel().setText("get bonus");
            } else {//normal slot

                sus.getPriceLabel().setText("$" + Integer.toString(s.getSlotPrice()));

            }
        }

        //reprint player's information
        for (Player p : players) {
            if (!p.isIsBankrupt()) {
                //print id to ownedslot
                for (Slot os : p.getOwnedSlots()) {
                    JLabel ownerLabel = slotUiSets.get(os.getSlotID()).getOwnerLabel();
                    ownerLabel.setText(Integer.toString(p.getPlayerID()));
                }
                //print id to located slot
                JLabel spaceLabel = slotUiSets.get(p.getPosition()).getSpaceLabel();
                String tmp = spaceLabel.getText().trim();
                spaceLabel.setText((tmp + " " + Integer.toString(p.getPlayerID())).trim());
            }
        }

        //refresh player's status
        for (Player p : players) {
            PlayerUiSet pus = playerUiSets.get(p.getPlayerID());
            if (p.isIsBankrupt()) {
                pus.getPlayerNameLabel().setText("Player: " + p.getPlayerID() + "(player already bankrupted)");
                pus.getPlayerPosistionLabel().setText("---");
                pus.getPlayerBalanceLabel().setText("BANKRUPTED");
            } else {
                pus.getPlayerPosistionLabel().setText("Position: " + slots.get(p.getPosition()).getSlotName());
                pus.getPlayerBalanceLabel().setText("Balance: " + Integer.toString(p.getBalance()));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton mainButton;
    private javax.swing.JLabel mainMessageLabel;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItem1;
    private javax.swing.JLabel nameLabel0;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameLabel10;
    private javax.swing.JLabel nameLabel11;
    private javax.swing.JLabel nameLabel12;
    private javax.swing.JLabel nameLabel13;
    private javax.swing.JLabel nameLabel14;
    private javax.swing.JLabel nameLabel15;
    private javax.swing.JLabel nameLabel16;
    private javax.swing.JLabel nameLabel17;
    private javax.swing.JLabel nameLabel18;
    private javax.swing.JLabel nameLabel19;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.JLabel nameLabel20;
    private javax.swing.JLabel nameLabel21;
    private javax.swing.JLabel nameLabel22;
    private javax.swing.JLabel nameLabel3;
    private javax.swing.JLabel nameLabel4;
    private javax.swing.JLabel nameLabel5;
    private javax.swing.JLabel nameLabel6;
    private javax.swing.JLabel nameLabel7;
    private javax.swing.JLabel nameLabel8;
    private javax.swing.JLabel nameLabel9;
    private javax.swing.JLabel ownerLabel0;
    private javax.swing.JLabel ownerLabel1;
    private javax.swing.JLabel ownerLabel10;
    private javax.swing.JLabel ownerLabel11;
    private javax.swing.JLabel ownerLabel12;
    private javax.swing.JLabel ownerLabel13;
    private javax.swing.JLabel ownerLabel14;
    private javax.swing.JLabel ownerLabel15;
    private javax.swing.JLabel ownerLabel16;
    private javax.swing.JLabel ownerLabel17;
    private javax.swing.JLabel ownerLabel18;
    private javax.swing.JLabel ownerLabel19;
    private javax.swing.JLabel ownerLabel2;
    private javax.swing.JLabel ownerLabel20;
    private javax.swing.JLabel ownerLabel21;
    private javax.swing.JLabel ownerLabel22;
    private javax.swing.JLabel ownerLabel3;
    private javax.swing.JLabel ownerLabel4;
    private javax.swing.JLabel ownerLabel5;
    private javax.swing.JLabel ownerLabel6;
    private javax.swing.JLabel ownerLabel7;
    private javax.swing.JLabel ownerLabel8;
    private javax.swing.JLabel ownerLabel9;
    private javax.swing.JLabel playerBalanceLabel0;
    private javax.swing.JLabel playerBalanceLabel1;
    private javax.swing.JLabel playerBalanceLabel2;
    private javax.swing.JLabel playerBalanceLabel3;
    private javax.swing.JLabel playerCheatBalanceLabel;
    private javax.swing.JTextField playerCheatBalanceTextField;
    private javax.swing.JLabel playerCheatBankruptLabel;
    private javax.swing.JComboBox<String> playerCheatBankruptSelecterComboBox;
    private javax.swing.JButton playerCheatButton;
    private javax.swing.JPanel playerCheatPanel;
    private javax.swing.JLabel playerCheatPositionLabel;
    private javax.swing.JComboBox<String> playerCheatPositionSelecterComboBox;
    private javax.swing.JComboBox<String> playerCheatSelecterComboBox;
    private javax.swing.JComboBox<String> playerCheatTurnHolderComboBox;
    private javax.swing.JLabel playerCheatTurnHolderLabel;
    private javax.swing.JLabel playerNameLabel0;
    private javax.swing.JLabel playerNameLabel1;
    private javax.swing.JLabel playerNameLabel2;
    private javax.swing.JLabel playerNameLabel3;
    private javax.swing.JPanel playerPanel0;
    private javax.swing.JPanel playerPanel1;
    private javax.swing.JPanel playerPanel2;
    private javax.swing.JPanel playerPanel3;
    private javax.swing.JLabel playerPositionLabel0;
    private javax.swing.JLabel playerPositionLabel1;
    private javax.swing.JLabel playerPositionLabel2;
    private javax.swing.JLabel playerPositionLabel3;
    private javax.swing.JLabel priceLabel0;
    private javax.swing.JLabel priceLabel1;
    private javax.swing.JLabel priceLabel10;
    private javax.swing.JLabel priceLabel11;
    private javax.swing.JLabel priceLabel12;
    private javax.swing.JLabel priceLabel13;
    private javax.swing.JLabel priceLabel14;
    private javax.swing.JLabel priceLabel15;
    private javax.swing.JLabel priceLabel16;
    private javax.swing.JLabel priceLabel17;
    private javax.swing.JLabel priceLabel18;
    private javax.swing.JLabel priceLabel19;
    private javax.swing.JLabel priceLabel2;
    private javax.swing.JLabel priceLabel20;
    private javax.swing.JLabel priceLabel21;
    private javax.swing.JLabel priceLabel22;
    private javax.swing.JLabel priceLabel3;
    private javax.swing.JLabel priceLabel4;
    private javax.swing.JLabel priceLabel5;
    private javax.swing.JLabel priceLabel6;
    private javax.swing.JLabel priceLabel7;
    private javax.swing.JLabel priceLabel8;
    private javax.swing.JLabel priceLabel9;
    private javax.swing.JButton secondButton;
    private javax.swing.JLabel secondMessageLabel;
    private javax.swing.JPanel slot0Panel;
    private javax.swing.JPanel slot10Panel;
    private javax.swing.JPanel slot11Panel;
    private javax.swing.JPanel slot12Panel;
    private javax.swing.JPanel slot13Panel;
    private javax.swing.JPanel slot14Panel;
    private javax.swing.JPanel slot15Panel;
    private javax.swing.JPanel slot16Panel;
    private javax.swing.JPanel slot17Panel;
    private javax.swing.JPanel slot18Panel;
    private javax.swing.JPanel slot19Panel;
    private javax.swing.JPanel slot1Panel;
    private javax.swing.JPanel slot20Panel;
    private javax.swing.JPanel slot21Panel;
    private javax.swing.JPanel slot22Panel;
    private javax.swing.JPanel slot2Panel;
    private javax.swing.JPanel slot3Panel;
    private javax.swing.JPanel slot4Panel;
    private javax.swing.JPanel slot5Panel;
    private javax.swing.JPanel slot6Panel;
    private javax.swing.JPanel slot7Panel;
    private javax.swing.JPanel slot8Panel;
    private javax.swing.JPanel slot9Panel;
    private javax.swing.JButton slotCheatButton;
    private javax.swing.JLabel slotCheatOwnerLabel;
    private javax.swing.JPanel slotCheatPanel;
    private javax.swing.JComboBox<String> slotCheatPlayerSelecterComboBox;
    private javax.swing.JLabel slotCheatPriceLabel;
    private javax.swing.JTextField slotCheatPriceTextField;
    private javax.swing.JComboBox<String> slotCheatSelecterComboBox;
    private javax.swing.JLabel spaceLabel0;
    private javax.swing.JLabel spaceLabel1;
    private javax.swing.JLabel spaceLabel10;
    private javax.swing.JLabel spaceLabel11;
    private javax.swing.JLabel spaceLabel12;
    private javax.swing.JLabel spaceLabel13;
    private javax.swing.JLabel spaceLabel14;
    private javax.swing.JLabel spaceLabel15;
    private javax.swing.JLabel spaceLabel16;
    private javax.swing.JLabel spaceLabel17;
    private javax.swing.JLabel spaceLabel18;
    private javax.swing.JLabel spaceLabel19;
    private javax.swing.JLabel spaceLabel2;
    private javax.swing.JLabel spaceLabel20;
    private javax.swing.JLabel spaceLabel21;
    private javax.swing.JLabel spaceLabel22;
    private javax.swing.JLabel spaceLabel3;
    private javax.swing.JLabel spaceLabel4;
    private javax.swing.JLabel spaceLabel5;
    private javax.swing.JLabel spaceLabel6;
    private javax.swing.JLabel spaceLabel7;
    private javax.swing.JLabel spaceLabel8;
    private javax.swing.JLabel spaceLabel9;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel testingPanel;
    private javax.swing.JLabel tradeBalanceLabel0;
    private javax.swing.JLabel tradeBalanceLabel1;
    private javax.swing.JTextField tradeBidTextField0;
    private javax.swing.JTextField tradeBidTextField1;
    private javax.swing.JButton tradeButton;
    private javax.swing.JDialog tradeDialog;
    private javax.swing.JComboBox<String> tradePlayerSelecterComboBox0;
    private javax.swing.JComboBox<String> tradePlayerSelecterComboBox1;
    private javax.swing.JComboBox<String> tradeSlotSelecterComboBox0;
    private javax.swing.JComboBox<String> tradeSlotSelecterComboBox1;
    private javax.swing.JLabel turnLabel;
    // End of variables declaration//GEN-END:variables

    void displayMainButton(String s) {
        mainButton.setText(s);
    }

    void displaySecondButton(String s) {
        secondButton.setText(s);

        if (s == null) {
            secondButton.setVisible(false);
        } else {
            secondButton.setVisible(true);
        }
    }

    void displayMainMessage(String s) {
        mainMessageLabel.setText(s);
    }

    void displaySecondMessage(String s) {
        secondMessageLabel.setText(s);
    }

    void displayTurnMessage(String s) {
        turnLabel.setText(s);
    }

    public void showTradeDialog(ArrayList<Player> players) {
        tradeDialog.setLocationRelativeTo(this);
        tradeDialog.setAlwaysOnTop(true);
        tradeDialog.setVisible(true);
        this.enableMainFrame(false);
        System.out.println("op");

        //initate dialog
        tradePlayerSelecterComboBox0.removeAllItems();
        tradePlayerSelecterComboBox1.removeAllItems();
        tradeSlotSelecterComboBox0.removeAllItems();
        tradeSlotSelecterComboBox1.removeAllItems();

        Player turnHolder;
        for (Player p : players) {
            if (!p.isIsBankrupt()) {
                if (p.getPlayerID() == control.requestTurnHolderID()) {
                    turnHolder = p;
                    tradePlayerSelecterComboBox0.addItem("Player " + p.getPlayerID());
                } else {
                    tradePlayerSelecterComboBox1.addItem("Player " + p.getPlayerID());
                }
            }
        }
    }

    public void closeTradeDialog() {
        tradeDialog.dispose();
        tradeDialog.setVisible(false);
        this.enableMainFrame(true);
    }

    public void enableMainFrame(boolean enable) {
        mainButton.setEnabled(enable);
        secondButton.setEnabled(enable);
        playerCheatButton.setEnabled(enable);
        slotCheatButton.setEnabled(enable);
    }
}
